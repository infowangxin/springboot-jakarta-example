# 激活actuator 部分端点
management:
  endpoints:
    web:
      # Actuator 暴露的端点路径
      base-path: /rest/actuator
      exposure:
        # 常用端点：/info 应用基本信息，/health 健康度信息，/metrics 运行指标，/env 环境变量信息，/loggers 日志相关，/dump 线程相关信息，/trace 请求调用轨迹
        # 公开的端点列表。默认值为info, health
        include: '*'

server:
  servlet:
    context-path: /demo
  port: 8080
  shutdown: graceful   # 优雅停服务，在容器关闭时，web服务器将不再接收新请求，并将等待活动请求完成的缓冲期。从springboot2.3.0引入的新特性
  error:
    # springboot2.5.3 ErrorController中删除了getErrorPath方法，改为走配置项，默认是：/error
    path: /error
  tomcat:
    basedir: .
    accesslog:
      buffered: true # 设置是否缓存日志，默认值为true，当设置为false时，每个request都会立刻产生访问日志
      directory: logs # 指定access文件的路径
      enabled: true # 取值true、false，需要accesslog时设置为true
      file-date-format: .yyyy-MM-dd # 是设置滚动生成文件的格式，如yyyy-MM-dd是每天滚动生成新日志文件，yyyy-MM-dd.HH是每小时滚动生成新的日志文件。
      # Access log内置了两个日志格式模板，可以直接指定pattern为模板名称
      # common - %h %l %u %t "%r" %s %b，依次为：远程主机名称，远程用户名，被认证的远程用户，日期和时间，请求的第一行，response code，发送的字节数
      # combined - %h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"，依次为：远程主机名称，远程用户名，被认证的远程用户，日期和时间，请求的第一行，response code，发送的字节数，request header的Referer信息，request header的User-Agent信息。
      pattern: combined # 设置日志的格式，指定pattern为模板名称
      prefix: access # 日志文件的文件名后缀
      rename-on-rotate: false # 是否延迟在文件名中包含日期戳，直到旋转时间。
      request-attributes-enabled: false # 设置请求的IP地址，主机名，协议和端口的请求属性。
      suffix: .log # 日志文件的文件名后缀
      max-days: 7  # 设定保留7天的日志文件，已验证，此参数可真实有效删除access日志文件。
      rotate: true # 是否启用访问日志轮换。

spring:
  profiles:
    active: dev
  main:
    # 解决bean重复定义。设置为true，后定义bean覆盖之前定义相同名称的bean。springboot2.0.4开始支持，默认为rue；springboot2.1.0开始默认false
    allow-bean-definition-overriding: true
    # springboot2.6.0 以后的版本默认禁止 Bean 之间的循环引用，默认为false
    allow-circular-references: true
  application:
    # 应用名
    name: demo
  mvc:
    # 前端静态资源的位置
    static-path-pattern: /static/**
  thymeleaf:
    # 关闭thymeleaf的缓存，不然在开发过程中修改页面不会立刻生效需要重启，生产可配置为true
    cache: false
    # 开启MVC thymeleaf 视图解析
    enabled: true
    # 设置编码
    encoding: UTF-8
    # 禁用严格的HTML语法检查模式
    mode: LEGACYHTML5
    # 自定义的Thymeleaf的模板位置
    prefix: classpath:/templates/
    # 模板文件后缀
    suffix: .html
  redis:
    redisson:
      # redisson cluster yml 方式集成redis
      config: classpath:redisson_cluster.yml
  session:
    store-type: redis
    redis:
      namespace: demo-session-namespace
      flush-mode: on-save
#  session:
#    store-type: redis
#    redis:
#      namespace: spring::session

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  # 关闭mybatis-plus的banner打印
  global-config:
    banner: false
# PageHelper 配置
pagehelper:
  autoDialect: true               # 启用自动方言，自动识别数据库类型并选择适配的方言。
  reasonable: true                # 分页合理化
  supportMethodsArguments: true   # 支持通过参数控制
  count-column: "*"               # 计算总记录数时查询所有列，通常为 *
  async-count: true               # 异步查询总记录数，提升分页查询性能。
  params: count=countSql          # 设置为 SQL 语句中的 count 查询
  banner: false                   # 关闭banner打印


# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'demo'
      paths-to-match: '/**'
      packages-to-scan: com.nutcracker.example.demo.web.controller
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

# security 配置
security:
  #同一账号，最大登录数
  max-session: 10
  # 超出最大登录数，是否阻止登录
  prevents-login: false

app:
  secret:
    pool-size: 3